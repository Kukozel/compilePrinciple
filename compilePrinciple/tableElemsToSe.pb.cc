// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tableElemsToSe.proto

#include "tableElemsToSe.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class tableElems_elemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tableElems_elem>
      _instance;
} _tableElems_elem_default_instance_;
class tableElemsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tableElems>
      _instance;
} _tableElems_default_instance_;
namespace protobuf_tableElemsToSe_2eproto {
void InitDefaultstableElems_elemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_tableElems_elem_default_instance_;
    new (ptr) ::tableElems_elem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tableElems_elem::InitAsDefaultInstance();
}

void InitDefaultstableElems_elem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultstableElems_elemImpl);
}

void InitDefaultstableElemsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tableElemsToSe_2eproto::InitDefaultstableElems_elem();
  {
    void* ptr = &::_tableElems_default_instance_;
    new (ptr) ::tableElems();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tableElems::InitAsDefaultInstance();
}

void InitDefaultstableElems() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultstableElemsImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems_elem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems_elem, row_char_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems_elem, cloumn_string_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, elems_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, elems_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, columns_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, columns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, rows_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, table_ll1_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, table_ll1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, null_inll1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, error_inll1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tableElems, nullcharsignal_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tableElems_elem)},
  { 7, -1, sizeof(::tableElems)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_tableElems_elem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_tableElems_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tableElemsToSe.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024tableElemsToSe.proto\"\256\002\n\ntableElems\022\024\n"
      "\014elems_Length\030\001 \001(\005\022\037\n\005elems\030\002 \003(\0132\020.tab"
      "leElems.elem\022\026\n\016columns_Length\030\003 \001(\005\022\017\n\007"
      "columns\030\004 \003(\t\022\023\n\013rows_Length\030\005 \001(\005\022\014\n\004ro"
      "ws\030\006 \003(\t\022\030\n\020table_LL1_Length\030\007 \001(\005\022\021\n\tta"
      "ble_LL1\030\010 \003(\005\022\022\n\nnull_inLL1\030\t \001(\005\022\023\n\013err"
      "or_inLL1\030\n \001(\005\022\026\n\016NullCharSignal\030\013 \001(\t\032/"
      "\n\004elem\022\020\n\010row_char\030\001 \001(\t\022\025\n\rcloumn_strin"
      "g\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 335);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tableElemsToSe.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tableElemsToSe_2eproto

// ===================================================================

void tableElems_elem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tableElems_elem::kRowCharFieldNumber;
const int tableElems_elem::kCloumnStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tableElems_elem::tableElems_elem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tableElemsToSe_2eproto::InitDefaultstableElems_elem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tableElems.elem)
}
tableElems_elem::tableElems_elem(const tableElems_elem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  row_char_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row_char().size() > 0) {
    row_char_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_char_);
  }
  cloumn_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cloumn_string().size() > 0) {
    cloumn_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cloumn_string_);
  }
  // @@protoc_insertion_point(copy_constructor:tableElems.elem)
}

void tableElems_elem::SharedCtor() {
  row_char_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cloumn_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

tableElems_elem::~tableElems_elem() {
  // @@protoc_insertion_point(destructor:tableElems.elem)
  SharedDtor();
}

void tableElems_elem::SharedDtor() {
  row_char_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cloumn_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tableElems_elem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tableElems_elem::descriptor() {
  ::protobuf_tableElemsToSe_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tableElemsToSe_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tableElems_elem& tableElems_elem::default_instance() {
  ::protobuf_tableElemsToSe_2eproto::InitDefaultstableElems_elem();
  return *internal_default_instance();
}

tableElems_elem* tableElems_elem::New(::google::protobuf::Arena* arena) const {
  tableElems_elem* n = new tableElems_elem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tableElems_elem::Clear() {
// @@protoc_insertion_point(message_clear_start:tableElems.elem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_char_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cloumn_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool tableElems_elem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tableElems.elem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string row_char = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row_char()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row_char().data(), static_cast<int>(this->row_char().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tableElems.elem.row_char"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cloumn_string = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cloumn_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cloumn_string().data(), static_cast<int>(this->cloumn_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tableElems.elem.cloumn_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tableElems.elem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tableElems.elem)
  return false;
#undef DO_
}

void tableElems_elem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tableElems.elem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string row_char = 1;
  if (this->row_char().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row_char().data(), static_cast<int>(this->row_char().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tableElems.elem.row_char");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row_char(), output);
  }

  // string cloumn_string = 2;
  if (this->cloumn_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cloumn_string().data(), static_cast<int>(this->cloumn_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tableElems.elem.cloumn_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cloumn_string(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tableElems.elem)
}

::google::protobuf::uint8* tableElems_elem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tableElems.elem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string row_char = 1;
  if (this->row_char().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row_char().data(), static_cast<int>(this->row_char().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tableElems.elem.row_char");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row_char(), target);
  }

  // string cloumn_string = 2;
  if (this->cloumn_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cloumn_string().data(), static_cast<int>(this->cloumn_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tableElems.elem.cloumn_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cloumn_string(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tableElems.elem)
  return target;
}

size_t tableElems_elem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tableElems.elem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string row_char = 1;
  if (this->row_char().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row_char());
  }

  // string cloumn_string = 2;
  if (this->cloumn_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cloumn_string());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tableElems_elem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tableElems.elem)
  GOOGLE_DCHECK_NE(&from, this);
  const tableElems_elem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tableElems_elem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tableElems.elem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tableElems.elem)
    MergeFrom(*source);
  }
}

void tableElems_elem::MergeFrom(const tableElems_elem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tableElems.elem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.row_char().size() > 0) {

    row_char_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_char_);
  }
  if (from.cloumn_string().size() > 0) {

    cloumn_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cloumn_string_);
  }
}

void tableElems_elem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tableElems.elem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tableElems_elem::CopyFrom(const tableElems_elem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tableElems.elem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tableElems_elem::IsInitialized() const {
  return true;
}

void tableElems_elem::Swap(tableElems_elem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tableElems_elem::InternalSwap(tableElems_elem* other) {
  using std::swap;
  row_char_.Swap(&other->row_char_);
  cloumn_string_.Swap(&other->cloumn_string_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tableElems_elem::GetMetadata() const {
  protobuf_tableElemsToSe_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tableElemsToSe_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tableElems::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tableElems::kElemsLengthFieldNumber;
const int tableElems::kElemsFieldNumber;
const int tableElems::kColumnsLengthFieldNumber;
const int tableElems::kColumnsFieldNumber;
const int tableElems::kRowsLengthFieldNumber;
const int tableElems::kRowsFieldNumber;
const int tableElems::kTableLL1LengthFieldNumber;
const int tableElems::kTableLL1FieldNumber;
const int tableElems::kNullInLL1FieldNumber;
const int tableElems::kErrorInLL1FieldNumber;
const int tableElems::kNullCharSignalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tableElems::tableElems()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tableElemsToSe_2eproto::InitDefaultstableElems();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tableElems)
}
tableElems::tableElems(const tableElems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      elems_(from.elems_),
      columns_(from.columns_),
      rows_(from.rows_),
      table_ll1_(from.table_ll1_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nullcharsignal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nullcharsignal().size() > 0) {
    nullcharsignal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nullcharsignal_);
  }
  ::memcpy(&elems_length_, &from.elems_length_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_inll1_) -
    reinterpret_cast<char*>(&elems_length_)) + sizeof(error_inll1_));
  // @@protoc_insertion_point(copy_constructor:tableElems)
}

void tableElems::SharedCtor() {
  nullcharsignal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&elems_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_inll1_) -
      reinterpret_cast<char*>(&elems_length_)) + sizeof(error_inll1_));
  _cached_size_ = 0;
}

tableElems::~tableElems() {
  // @@protoc_insertion_point(destructor:tableElems)
  SharedDtor();
}

void tableElems::SharedDtor() {
  nullcharsignal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tableElems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tableElems::descriptor() {
  ::protobuf_tableElemsToSe_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tableElemsToSe_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tableElems& tableElems::default_instance() {
  ::protobuf_tableElemsToSe_2eproto::InitDefaultstableElems();
  return *internal_default_instance();
}

tableElems* tableElems::New(::google::protobuf::Arena* arena) const {
  tableElems* n = new tableElems;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tableElems::Clear() {
// @@protoc_insertion_point(message_clear_start:tableElems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elems_.Clear();
  columns_.Clear();
  rows_.Clear();
  table_ll1_.Clear();
  nullcharsignal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&elems_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_inll1_) -
      reinterpret_cast<char*>(&elems_length_)) + sizeof(error_inll1_));
  _internal_metadata_.Clear();
}

bool tableElems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tableElems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 elems_Length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &elems_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tableElems.elem elems = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_elems()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 columns_Length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &columns_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string columns = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_columns()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->columns(this->columns_size() - 1).data(),
            static_cast<int>(this->columns(this->columns_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tableElems.columns"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rows_Length = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rows_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string rows = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_rows()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rows(this->rows_size() - 1).data(),
            static_cast<int>(this->rows(this->rows_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tableElems.rows"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 table_LL1_Length = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_ll1_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 table_LL1 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_table_ll1())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_table_ll1())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 null_inLL1 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &null_inll1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 error_inLL1 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_inll1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string NullCharSignal = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nullcharsignal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nullcharsignal().data(), static_cast<int>(this->nullcharsignal().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tableElems.NullCharSignal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tableElems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tableElems)
  return false;
#undef DO_
}

void tableElems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tableElems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 elems_Length = 1;
  if (this->elems_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->elems_length(), output);
  }

  // repeated .tableElems.elem elems = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elems_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->elems(static_cast<int>(i)), output);
  }

  // int32 columns_Length = 3;
  if (this->columns_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->columns_length(), output);
  }

  // repeated string columns = 4;
  for (int i = 0, n = this->columns_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->columns(i).data(), static_cast<int>(this->columns(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tableElems.columns");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->columns(i), output);
  }

  // int32 rows_Length = 5;
  if (this->rows_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rows_length(), output);
  }

  // repeated string rows = 6;
  for (int i = 0, n = this->rows_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rows(i).data(), static_cast<int>(this->rows(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tableElems.rows");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->rows(i), output);
  }

  // int32 table_LL1_Length = 7;
  if (this->table_ll1_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->table_ll1_length(), output);
  }

  // repeated int32 table_LL1 = 8;
  if (this->table_ll1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _table_ll1_cached_byte_size_));
  }
  for (int i = 0, n = this->table_ll1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->table_ll1(i), output);
  }

  // int32 null_inLL1 = 9;
  if (this->null_inll1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->null_inll1(), output);
  }

  // int32 error_inLL1 = 10;
  if (this->error_inll1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->error_inll1(), output);
  }

  // string NullCharSignal = 11;
  if (this->nullcharsignal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nullcharsignal().data(), static_cast<int>(this->nullcharsignal().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tableElems.NullCharSignal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->nullcharsignal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tableElems)
}

::google::protobuf::uint8* tableElems::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tableElems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 elems_Length = 1;
  if (this->elems_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->elems_length(), target);
  }

  // repeated .tableElems.elem elems = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elems_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->elems(static_cast<int>(i)), deterministic, target);
  }

  // int32 columns_Length = 3;
  if (this->columns_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->columns_length(), target);
  }

  // repeated string columns = 4;
  for (int i = 0, n = this->columns_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->columns(i).data(), static_cast<int>(this->columns(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tableElems.columns");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->columns(i), target);
  }

  // int32 rows_Length = 5;
  if (this->rows_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rows_length(), target);
  }

  // repeated string rows = 6;
  for (int i = 0, n = this->rows_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rows(i).data(), static_cast<int>(this->rows(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tableElems.rows");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->rows(i), target);
  }

  // int32 table_LL1_Length = 7;
  if (this->table_ll1_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->table_ll1_length(), target);
  }

  // repeated int32 table_LL1 = 8;
  if (this->table_ll1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _table_ll1_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->table_ll1_, target);
  }

  // int32 null_inLL1 = 9;
  if (this->null_inll1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->null_inll1(), target);
  }

  // int32 error_inLL1 = 10;
  if (this->error_inll1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->error_inll1(), target);
  }

  // string NullCharSignal = 11;
  if (this->nullcharsignal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nullcharsignal().data(), static_cast<int>(this->nullcharsignal().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tableElems.NullCharSignal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->nullcharsignal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tableElems)
  return target;
}

size_t tableElems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tableElems)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tableElems.elem elems = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->elems_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->elems(static_cast<int>(i)));
    }
  }

  // repeated string columns = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->columns_size());
  for (int i = 0, n = this->columns_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->columns(i));
  }

  // repeated string rows = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->rows_size());
  for (int i = 0, n = this->rows_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->rows(i));
  }

  // repeated int32 table_LL1 = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->table_ll1_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _table_ll1_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string NullCharSignal = 11;
  if (this->nullcharsignal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nullcharsignal());
  }

  // int32 elems_Length = 1;
  if (this->elems_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->elems_length());
  }

  // int32 columns_Length = 3;
  if (this->columns_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->columns_length());
  }

  // int32 rows_Length = 5;
  if (this->rows_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rows_length());
  }

  // int32 table_LL1_Length = 7;
  if (this->table_ll1_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->table_ll1_length());
  }

  // int32 null_inLL1 = 9;
  if (this->null_inll1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->null_inll1());
  }

  // int32 error_inLL1 = 10;
  if (this->error_inll1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_inll1());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tableElems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tableElems)
  GOOGLE_DCHECK_NE(&from, this);
  const tableElems* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tableElems>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tableElems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tableElems)
    MergeFrom(*source);
  }
}

void tableElems::MergeFrom(const tableElems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tableElems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elems_.MergeFrom(from.elems_);
  columns_.MergeFrom(from.columns_);
  rows_.MergeFrom(from.rows_);
  table_ll1_.MergeFrom(from.table_ll1_);
  if (from.nullcharsignal().size() > 0) {

    nullcharsignal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nullcharsignal_);
  }
  if (from.elems_length() != 0) {
    set_elems_length(from.elems_length());
  }
  if (from.columns_length() != 0) {
    set_columns_length(from.columns_length());
  }
  if (from.rows_length() != 0) {
    set_rows_length(from.rows_length());
  }
  if (from.table_ll1_length() != 0) {
    set_table_ll1_length(from.table_ll1_length());
  }
  if (from.null_inll1() != 0) {
    set_null_inll1(from.null_inll1());
  }
  if (from.error_inll1() != 0) {
    set_error_inll1(from.error_inll1());
  }
}

void tableElems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tableElems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tableElems::CopyFrom(const tableElems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tableElems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tableElems::IsInitialized() const {
  return true;
}

void tableElems::Swap(tableElems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tableElems::InternalSwap(tableElems* other) {
  using std::swap;
  elems_.InternalSwap(&other->elems_);
  columns_.InternalSwap(&other->columns_);
  rows_.InternalSwap(&other->rows_);
  table_ll1_.InternalSwap(&other->table_ll1_);
  nullcharsignal_.Swap(&other->nullcharsignal_);
  swap(elems_length_, other->elems_length_);
  swap(columns_length_, other->columns_length_);
  swap(rows_length_, other->rows_length_);
  swap(table_ll1_length_, other->table_ll1_length_);
  swap(null_inll1_, other->null_inll1_);
  swap(error_inll1_, other->error_inll1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tableElems::GetMetadata() const {
  protobuf_tableElemsToSe_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tableElemsToSe_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
